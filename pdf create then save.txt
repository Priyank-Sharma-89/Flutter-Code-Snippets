import 'dart:io';

import 'package:barcode_widget/barcode_widget.dart';
import 'package:flutter/material.dart';
import 'package:flutter_full_pdf_viewer/flutter_full_pdf_viewer.dart';
import 'package:intl/intl.dart';
import 'package:path_provider/path_provider.dart';
import 'package:pdf/pdf.dart';
import 'package:pdf/widgets.dart' as pw;

class PrintBarcodeScreen extends StatefulWidget {
  @override
  _PrintBarcodeScreenState createState() => _PrintBarcodeScreenState();
}

class _PrintBarcodeScreenState extends State<PrintBarcodeScreen> {
  var dt = DateTime.now();
  final pdf = pw.Document();
  String documentPath;

  generatePdf() async {
    pdf.addPage(
      pw.MultiPage(
          pageFormat: PdfPageFormat.a4,
          margin: pw.EdgeInsets.all(16),
          build: (pw.Context context) {
            return <pw.Widget>[
              pw.Header(
                level: 0,
                child: pw.Row(
                  mainAxisAlignment: pw.MainAxisAlignment.spaceBetween,
                  children: [
                    pw.Text(
                      DateFormat.yMMMEd().format(dt),
                      textScaleFactor: 2,
                      // style: getTheme.textTheme.headline6,
                    ),
                    pw.Text(
                      DateFormat.jms().format(dt),
                      // style: getTheme.textTheme.headline6,
                    ),
                  ],
                ),
              ),
              pw.BarcodeWidget(
                barcode: pw.Barcode.gs128(),
                color: PdfColor.fromHex("#000000"),
                data: '123456789123',
                // width: screenSize.width * 0.8,
                height: 90,
              ),
              pw.Table.fromTextArray(context: context, data: <List<String>>[
                <String>['Year', 'Ipsum', 'Lorem'],
                <String>['SN0', 'GFG1'],
                <String>['SN1', 'GFG2'],
              ]),
            ];
          }),
    );
  }

  Future savePdf() async {
    Directory documentDirectory = await getApplicationDocumentsDirectory();
    documentPath = documentDirectory.path;
    File receiptFile = File("$documentPath/receipt.pdf");
    receiptFile.writeAsBytesSync(List.from(await pdf.save()));
  }

  @override
  void initState() {
    super.initState();
    generatePdf();
    savePdf();
  }

  @override
  Widget build(BuildContext context) {
    ThemeData getTheme = Theme.of(context);
    Size screenSize = MediaQuery.of(context).size;
    Color kPrimaryColor = getTheme.primaryColor;
    return PDFViewerScaffold(
      appBar: AppBar(
        title: Text(
          'Barcode Print Receipt',
          style: TextStyle(color: kPrimaryColor),
        ),
        centerTitle: true,
        automaticallyImplyLeading: true,
        backgroundColor: getTheme.canvasColor,
        elevation: 0,
        iconTheme: IconThemeData(color: kPrimaryColor),
      ),
      path: "$documentPath/receipt.pdf",
    );
  }
}
